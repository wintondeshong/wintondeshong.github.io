// Generated by CoffeeScript 1.12.7
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  com.wintondeshong.views.MainView = (function(superClass) {
    extend(MainView, superClass);

    function MainView() {
      this._handlePreviewClick = bind(this._handlePreviewClick, this);
      this._handleDetailsClick = bind(this._handleDetailsClick, this);
      this._toggleContainers = bind(this._toggleContainers, this);
      this._isTargetPermitted = bind(this._isTargetPermitted, this);
      this.render = bind(this.render, this);
      this.initialize = bind(this.initialize, this);
      return MainView.__super__.constructor.apply(this, arguments);
    }

    MainView.prototype.events = {
      'click .preview': '_handlePreviewClick',
      'click .details': '_handleDetailsClick'
    };

    MainView.prototype.initialize = function(options) {
      this.$el = $('#main-view');
      return this.el = this.$el.get(0);
    };

    MainView.prototype.render = function() {
      this.$el.find('.project-tile').each(function(index, tile) {
        return $(tile).css('display', 'block').fadeOut(0).delay(150 * index).fadeIn();
      });
      return this.$el;
    };

    MainView.prototype._isTargetPermitted = function(target) {
      return $(target).prop('tagName') === 'A';
    };

    MainView.prototype._toggleContainers = function($containerToHide, containerToShow) {
      var $containerToShow, $tile;
      $tile = $containerToHide.closest('.project-tile');
      $containerToShow = $tile.find(containerToShow);
      return $tile.animate({
        opacity: 0
      }, {
        complete: (function(_this) {
          return function() {
            $containerToHide.css('display', 'none');
            $containerToShow.css('display', 'block');
            return $tile.animate({
              opacity: 1
            });
          };
        })(this)
      });
    };

    MainView.prototype._handleDetailsClick = function(e) {
      var $detailContainer;
      if (this._isTargetPermitted(e.target)) {
        return;
      }
      e.preventDefault();
      $detailContainer = $(e.currentTarget);
      return this._toggleContainers($detailContainer, '.preview');
    };

    MainView.prototype._handlePreviewClick = function(e) {
      var $previewContainer;
      if (this._isTargetPermitted(e.target)) {
        return;
      }
      e.preventDefault();
      $previewContainer = $(e.currentTarget);
      return this._toggleContainers($previewContainer, '.details');
    };

    return MainView;

  })(Backbone.View);

}).call(this);
